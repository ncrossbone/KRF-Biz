<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ce.krf.biz.mapper.AdminConfigMapper">
	<select id="selectLayerSetAll" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
		SELECT /* KRF_BIZ.AdminConfigMapper.selectLayerSetAll  */
				MAPSVC_AUTHOR_SN AS "layerSetId",
  		        MAPSVC_NM AS "layerSetName",
  		        MAPSVC_ID AS "layerSetIds"
  		   FROM TGS_AUTHOR_MAPSVC
  		  ORDER 
  		     BY MAPSVC_AUTHOR_SN
    </select>
    <select id="selectLayerSetForUser" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    	SELECT /* KRF_BIZ.AdminConfigMapper.selectLayerSetForUser  */
    	       T3.USERID AS "userId",
		       T3.LAYERSETID AS "layerSetId",
		       T4.MAPSVC_NM AS "layerSetName",
		       T4.MAPSVC_ID AS "layerSetIds"
		  FROM (SELECT T1.USER_ID AS USERID, NVL (T2.MAPSVC_AUTHOR_SN, 1) AS LAYERSETID
		          FROM TUSER T1, TGS_AUTHOR T2
		         WHERE T1.USER_ID = T2.USER_ID(+) AND T1.USER_ID = #{userId}) T3,
		       TGS_AUTHOR_MAPSVC T4
		 WHERE T3.LAYERSETID = T4.MAPSVC_AUTHOR_SN
    </select>
    
    
    <select id="selectUsers" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    	SELECT /* KRF_BIZ.AdminConfigMapper.selectUsers  */
    		   ZRN AS "zrn",
    		   TOTCNT AS "totCnt",
    		   USER_ID AS "userId",
    		   USER_NM AS "userNm",
    		   LEVEL_NM AS "levelNm",
    		   ORG_NAME AS "orgName",
    		   NVL((SELECT T1.MAPSVC_AUTHOR_SN FROM TGS_AUTHOR T1 WHERE T1.USER_ID = T2.USER_ID), 1) AS "layerSetId",
    		   (SELECT MAPSVC_NM FROM TGS_AUTHOR_MAPSVC T3 WHERE T3.MAPSVC_AUTHOR_SN = NVL((SELECT T1.MAPSVC_AUTHOR_SN FROM TGS_AUTHOR T1 WHERE T1.USER_ID = T2.USER_ID), 1)) AS "layerSetName"
		  FROM (  SELECT 1 AS ZRN,
		                 (SELECT COUNT (*) FROM TUSER) AS TOTCNT,
		                 USER_ID,
		                 USER_NM,
		                 (SELECT LEVEL_NM
		                    FROM TLEVEL T2
		                   WHERE TU.LEVEL_CD = T2.LEVEL_CD)
		                    AS LEVEL_NM,
		                 (SELECT CODE_CTN
		                    FROM CODE CD
		                   WHERE     CODE_ID = 'ORG001'
		                         AND USE_YN = 'Y'
		                         AND CD.CODE = TU.ORG_CD
		                         AND ROWNUM = 1)
		                    ORG_NAME
		            FROM TUSER TU
		           WHERE CONFIRM_YN = 'N'
		        ORDER BY CREATE_DT) T2
		UNION ALL
		SELECT ZRN AS "zrn",
    		   TOTCNT AS "totCnt",
    		   USER_ID AS "userId",
    		   USER_NM AS "userNm",
    		   LEVEL_NM AS "levelNm",
    		   ORG_NAME AS "orgName",
    		   NVL((SELECT T1.MAPSVC_AUTHOR_SN FROM TGS_AUTHOR T1 WHERE T1.USER_ID = T2.USER_ID), 1) AS "layerSetId",
    		   (SELECT MAPSVC_NM FROM TGS_AUTHOR_MAPSVC T3 WHERE T3.MAPSVC_AUTHOR_SN = NVL((SELECT T1.MAPSVC_AUTHOR_SN FROM TGS_AUTHOR T1 WHERE T1.USER_ID = T2.USER_ID), 1)) AS "layerSetName"
		  FROM (SELECT ROWNUM AS ZRN, A.*
		          FROM (  SELECT COUNT (*) OVER () AS TOTCNT,
		                         USER_ID,
		                         USER_NM,
		                         (SELECT LEVEL_NM
		                            FROM TLEVEL T2
		                           WHERE TU.LEVEL_CD = T2.LEVEL_CD)
		                            AS LEVEL_NM,
		                         (SELECT CODE_CTN
		                            FROM CODE CD
		                           WHERE     CODE_ID = 'ORG001'
		                                 AND USE_YN = 'Y'
		                                 AND CD.CODE = TU.ORG_CD
		                                 AND ROWNUM = 1)
		                            ORG_NAME
		                    FROM TUSER TU
		                   WHERE 1 = 1 AND CONFIRM_YN = 'Y'
		                ORDER BY CONFIRM_YN DESC,
		                         TO_NUMBER (LEVEL_CD),
		                         EFIS_LEVEL_CD,
		                         CREATE_DT) A
		         WHERE 1=1) T2
		 WHERE 1=1
    </select>
    
    <select id="selectSessionId" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    	SELECT USER_ID as "userId" ,
		       USER_NM ,
		       PASSWORD ,
		       AUTHOR_CODE ,
		       GIS_AUTHOR_CODE ,
		       JOB_CODE ,
		       JOB_DETAIL_CN ,
		       '' AS BRTHDY ,
		       '' AS TELNO ,
		       '' AS MBTLNUM ,
		       '' AS EMAIL ,
		       USE_AT ,
		       RETURN_RESN ,
		       SESION_ID ,
		       LOGIN_FAILR_CO ,
		       INSTT_CODE ,
		       USER_IP ,
		       REGIST_DT ,
		       REGISTER_ID ,
		       CHANGE_DT ,
		       CHANGER_ID
			FROM   COM_USER
		  WHERE SESION_ID = #{userId}
    </select>
    
    
    
    <select id="selectIdPass" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    	SELECT USER_ID as "userId",
		       USER_NM ,
		       PASSWORD ,
		       AUTHOR_CODE ,
		       GIS_AUTHOR_CODE ,
		       JOB_CODE ,
		       JOB_DETAIL_CN ,
		       '' AS BRTHDY ,
		       '' AS TELNO ,
		       '' AS MBTLNUM ,
		       '' AS EMAIL ,
		       USE_AT ,
		       RETURN_RESN ,
		       SESION_ID ,
		       LOGIN_FAILR_CO ,
		       INSTT_CODE ,
		       USER_IP ,
		       REGIST_DT ,
		       REGISTER_ID ,
		       CHANGE_DT ,
		       CHANGER_ID
		from   COM_USER
		where  USER_ID = #{userId}
		AND    PASSWORD = #{userPass}
    </select>
    
    <insert id="setUserLayerInfo" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    
    	INSERT INTO COM_VRIABL_TMPR (VRIABL_1_VALUE) VALUES ( #{userId} )
    	
    </insert>
    
    <select id="getUserLayerInfo" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
    
    	SELECT SN, LYR_CODE, LYR_USE_AT, INQIRE_USE_AT, LYR_NM, LYR_LEVEL, LYR_DC, SORT_ORDR, UPPER_LYR_CODE FROM V_COM_GISLYR_AUTHOR
    
    </select>
    
    
    <insert id="insertLayerSet" parameterType="com.ce.krf.biz.model.AdminConfigVO">
        INSERT INTO TGS_AUTHOR_MAPSVC(MAPSVC_AUTHOR_SN, MAPSVC_NM, MAPSVC_ID,REGISTER_ID, REGIST_DT) 
        VALUES((SELECT NVL(MAX(MAPSVC_AUTHOR_SN), 0)+1 AS MAPSVC_AUTHOR_SN FROM TGS_AUTHOR_MAPSVC), #{layerSetName}, #{layerSetIds}, #{userId}, SYSDATE)
    </insert>	
    <insert id="insertLayerSetByUser" parameterType="com.ce.krf.biz.model.AdminConfigVO">
            INSERT INTO TGS_AUTHOR(SN,USER_ID, MAPSVC_AUTHOR_SN, REGISTER_ID, REGIST_DT) 
        VALUES((SELECT NVL(MAX(SN), 0)+1 AS SN FROM TGS_AUTHOR), #{userId}, #{layerSetId}, #{regUserId}, SYSDATE)
    </insert>	
    <update id="updateLayerSet" parameterType="com.ce.krf.biz.model.AdminConfigVO">
   		UPDATE TGS_AUTHOR_MAPSVC
     	   SET MAPSVC_NM = #{layerSetName},
     	       MAPSVC_ID = #{layerSetIds},
     	       CHANGER_ID = #{userId},
			   CHANGE_DT = SYSDATE  
     	 WHERE MAPSVC_AUTHOR_SN = #{layerSetId}
    </update>
    <delete id="deleteLayerSet" parameterType="com.ce.krf.biz.model.AdminConfigVO">
        DELETE 
          FROM TGS_AUTHOR_MAPSVC
         WHERE MAPSVC_AUTHOR_SN = #{layerSetId}
    </delete>
    <delete id="deleteLayerSetByUser" parameterType="com.ce.krf.biz.model.AdminConfigVO">
        DELETE 
          FROM TGS_AUTHOR 
         WHERE USER_ID = #{userId}
    </delete>
    <delete id="deleteLayerSetByLayerSetId" parameterType="com.ce.krf.biz.model.AdminConfigVO">
        DELETE 
          FROM TGS_AUTHOR 
         WHERE MAPSVC_AUTHOR_SN = #{layerSetId}
    </delete>
    
    
    <select id="selectDroneLayer" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
		SELECT 
		    RIVER,DRONELAYERID,DRONEDATE,MEASUREDATE,CHLALAYERID,CHLADATE,PHYLAYERID,PHYDATE,BLUELAYERID,BLUEDATE,ETC
		  FROM KRF_DRONE_LAYER_INFO ORDER BY DRONEDATE DESC
  	</select>
  	
  	<delete id="deleteDroneLayer" parameterType="com.ce.krf.biz.model.AdminConfigVO">
  		delete from KRF_DRONE_LAYER_INFO WHERE ETC = #{etc}
  	</delete>
  	
  	<insert id="insertDroneLayer" parameterType="com.ce.krf.biz.model.AdminConfigVO">
		INSERT INTO KRF_DRONE_LAYER_INFO (RIVER,DRONELAYERID,DRONEDATE,MEASUREDATE,CHLALAYERID,CHLADATE,PHYLAYERID,PHYDATE,BLUELAYERID,BLUEDATE,ETC)
            VALUES (#{river},#{droneLayerId},#{droneDate},#{measureDate},#{chlaLayerId},#{chlaDate},#{phyLayerId},#{phyDate},#{blueLayerId},#{blueDate},#{etc})
  	</insert>
  	
  	
  	<insert id="updateDroneLayer" parameterType="com.ce.krf.biz.model.AdminConfigVO">
		UPDATE KRF_DRONE_LAYER_INFO
		   SET RIVER = #{river},
		   DRONELAYERID = #{droneLayerId},
		   DRONEDATE = #{droneDate},
		   MEASUREDATE = #{measureDate},
		   CHLALAYERID = #{chlaLayerId},
		   CHLADATE= #{chlaDate},
		   PHYLAYERID = #{phyLayerId},
		   PHYDATE = #{phyDate},
		   BLUELAYERID = #{blueLayerId},
		   BLUEDATE = #{blueDate}
		 WHERE ETC = #{etc}
  	</insert>
  	
  	<select id="selectBoInfo" resultType="hashmap" parameterType="com.ce.krf.biz.model.AdminConfigVO">
  	/*KRF_BIZ.AdminConfigMapper.selectBoInfo*/
	SELECT BRRER_REPRSNT_SPOT_CODE AS SPOT_CODE, 
	      CASE OPN_AT
	        WHEN '01' THEN 'true'
	        WHEN '02' THEN 'true'
	        WHEN '03' THEN 'false'
	        ELSE 'false' 
	      END AS OPN_AT
	      ,OBSNM
	    FROM BOMNT.TCM_BRRER_MAPNG A,
	         BOMNT.BOOBSIF B
	  WHERE A.BRRER_CODE = B.BOOBSCD
	    AND DTA_CODE = '010101'
  	
  	</select>

    
    
</mapper>